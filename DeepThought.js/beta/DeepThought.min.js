var dt=function(t){var e={};function r(o){if(e[o])return e[o].exports;var a=e[o]={i:o,l:!1,exports:{}};return t[o].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)r.d(o,a,function(e){return t[e]}.bind(null,a));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=2)}([function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(t,e,r){this.rows=t,this.cols=e,this.data=[],r||(r=0);for(var o=0;o<this.rows;o++){this.data[o]=[];for(var a=0;a<this.cols;a++)this.data[o][a]=r}}return t.fromArray=function(e){for(var r=new t(e.length,1),o=0;o<e.length;o++)r.data[o][0]=e[o];return r},t.toArray=function(t){for(var e=[],r=0;r<t.rows;r++)for(var o=0;o<t.cols;o++)e.push(t.data[r][o]);return e},t.multiply=function(e,r){if(e.cols!==r.rows)return console.error("Cols of A must match rows of B."),new t(0,0);for(var o=new t(e.rows,r.cols),a=0;a<o.rows;a++)for(var n=0;n<o.cols;n++){for(var s=0,i=0;i<e.cols;i++)s+=e.data[a][i]*r.data[i][n];o.data[a][n]=s}return o},t.subtract=function(e,r){for(var o=new t(e.rows,e.cols),a=0;a<e.rows;a++)for(var n=0;n<e.cols;n++)o.data[a][n]=e.data[a][n]-r.data[a][n];return o},t.add=function(e,r){for(var o=new t(e.rows,e.cols),a=0;a<e.rows;a++)for(var n=0;n<e.cols;n++)o.data[a][n]=e.data[a][n]+r.data[a][n];return o},t.transpose=function(e){for(var r=new t(e.cols,e.rows),o=0;o<e.rows;o++)for(var a=0;a<e.cols;a++)r.data[a][o]=e.data[o][a];return r},t.copy=function(e){for(var r=new t(e.rows,e.cols),o=0;o<e.rows;o++)for(var a=0;a<e.cols;a++)r.data[o][a]=e.data[o][a];return r},t.map=function(e,r){for(var o=new t(e.rows,e.cols),a=0;a<e.rows;a++)for(var n=0;n<e.cols;n++){var s=e.data[a][n];o.data[a][n]=r(s)}return o},t.prototype.multiply=function(t){for(var e=0;e<this.rows;e++)for(var r=0;r<this.cols;r++)this.data[e][r]*=t},t.prototype.map=function(t){for(var e=0;e<this.rows;e++)for(var r=0;r<this.cols;r++){var o=this.data[e][r];this.data[e][r]=t(o)}},t.prototype.copy=function(){for(var e=new t(this.rows,this.cols),r=0;r<this.rows;r++)for(var o=0;o<this.cols;o++)e.data[r][o]=this.data[r][o];return e},t.prototype.add=function(t){for(var e=0;e<this.rows;e++)for(var r=0;r<this.cols;r++)this.data[e][r]+=t},t.prototype.subtract=function(t){for(var e=0;e<this.rows;e++)for(var r=0;r<this.cols;r++)this.data[e][r]-=t},t.prototype.toArray=function(){for(var t=[],e=0;e<this.rows;e++)for(var r=0;r<this.cols;r++)t.push(this.data[e][r]);return t},t.prototype.randomize=function(){for(var t=0;t<this.rows;t++)for(var e=0;e<this.cols;e++)this.data[t][e]=2*Math.random()-1},t.prototype.print=function(){console.table(this.data)},t.prototype.fill=function(t){t||(t=0);for(var e=0;e<this.rows;e++)for(var r=0;r<this.cols;r++)this.data[e][r]=t},t}();e.default=o},function(t,e,r){"use strict";var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var a=o(r(0)),n=function(){return function(t,e){this.w_f_t=new a.default(e,t),this.w_f_t.randomize(),this.biases=new a.default(e,1),this.biases.randomize(),this.values=new a.default(e,1)}}();e.HiddenLayer=n;var s=function(){return function(t,e){this.w_f_t=new a.default(e,t),this.w_f_t.randomize(),this.biases=new a.default(e,1),this.biases.randomize()}}();e.OutputLayer=s,e.addHiddenLayer=function(t,e){e.hiddenLayerNodes[e.numHiddenLayers]=t.nodes,0==e.numHiddenLayers?e.hiddenLayers[e.numHiddenLayers]=new n(e.inputNodes,e.hiddenLayerNodes[e.numHiddenLayers]):e.hiddenLayers[e.numHiddenLayers]=new n(e.hiddenLayerNodes[e.numHiddenLayers-1],e.hiddenLayerNodes[e.numHiddenLayers]),e.numHiddenLayers++},e.addOutputLayer=function(t,e){e.outputNodes=t.nodes,e.outputLayer=new s(e.hiddenLayerNodes[e.numHiddenLayers-1],e.outputNodes)},e.sigmoid=function(t){return 1/(1+Math.exp(-t))},e.dsigmoid=function(t){return t*(1-t)}},function(t,e,r){"use strict";var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var a=o(r(0));e.Matrix=a.default;var n=r(1),s=function(){function t(){this.inputNodes=0,this.hiddenLayerNodes=[],this.hiddenLayers=[],this.numHiddenLayers=0,this.outputNodes=0,this.outputLayer=new n.OutputLayer(0,0),this.learningRate=.1}return t.prototype.addLayers=function(t){for(var e=0;e<t.length;e++){var r=t[e];"input"==r.type?this.inputNodes=r.nodes:"hidden"==r.type?n.addHiddenLayer(r,this):"output"==r.type?n.addOutputLayer(r,this):console.error("Invalid layertype: "+r.type)}},t.prototype.predict=function(t){if(t.length==this.inputNodes){var e=a.default.fromArray(t),r=a.default.multiply(this.hiddenLayers[0].w_f_t,e);(r=a.default.add(r,this.hiddenLayers[0].biases)).map(n.sigmoid);for(var o=1;o<this.hiddenLayers.length;o++)r=a.default.multiply(this.hiddenLayers[o].w_f_t,r),(r=a.default.add(r,this.hiddenLayers[o].biases)).map(n.sigmoid);var s=a.default.multiply(this.outputLayer.w_f_t,r);return(s=a.default.add(s,this.outputLayer.biases)).map(n.sigmoid),s.toArray()}console.error("Number of given inputs ("+t.length+") does not match up with number of input nodes ("+this.inputNodes+").")},t.prototype.train=function(t,e,r){if(t.length==this.inputNodes){e.length!=this.outputNodes&&console.error("Number of given targets ("+e.length+") does not match up with number of output nodes ("+this.outputNodes+")."),r||(r=1e4);var o=a.default.fromArray(t),s=a.default.multiply(this.hiddenLayers[0].w_f_t,o);(s=a.default.add(s,this.hiddenLayers[0].biases)).map(n.sigmoid),this.hiddenLayers[0].values=s;for(var i=1;i<this.hiddenLayers.length;i++)s=a.default.multiply(this.hiddenLayers[i].w_f_t,s),(s=a.default.add(s,this.hiddenLayers[i].biases)).map(n.sigmoid),this.hiddenLayers[i].values=s;var d=a.default.multiply(this.outputLayer.w_f_t,s);(d=a.default.add(d,this.outputLayer.biases)).map(n.sigmoid);var u=a.default.fromArray(e),f=a.default.subtract(u,d),l=a.default.map(d,n.dsigmoid);(l=a.default.multiply(l,f)).multiply(this.learningRate);var h=a.default.transpose(this.hiddenLayers[this.numHiddenLayers-1].values),p=a.default.multiply(l,h);this.outputLayer.w_f_t=a.default.add(this.outputLayer.w_f_t,p);var y=a.default.transpose(this.outputLayer.w_f_t),c=a.default.multiply(y,f);for(i=this.numHiddenLayers-1;i>0;i--){var m=a.default.transpose(this.hiddenLayers[i].w_f_t);(c=a.default.multiply(m,c)).print()}}else console.error("Number of given inputs ("+t.length+") does not match up with number of input nodes ("+this.inputNodes+").")},t.prototype.mutate=function(t){console.error("Feature not implemented yet")},t.log=function(t){for(var e=0,r=0;r<t.numHiddenLayers;r++)e+=t.hiddenLayerNodes[r];var o="\nNeural Network: \n";o+=" NODES:\n",o+="  Input nodes: "+t.inputNodes+"\n",o+="  Hidden nodes: "+e+"\n",o+="  Output nodes: "+t.outputNodes+"\n",o+="\n",o+=" HIDDEN LAYERS:\n";for(r=0;r<t.numHiddenLayers;r++)o+="  Hidden Layer "+(r+1)+":\n",o+="   Nodes: "+t.hiddenLayerNodes[r]+"\n",o+="   Biases: ["+t.hiddenLayers[r].biases.toArray()+"]\n";o+=" LEARNING RATE: "+t.learningRate,console.log(o)},t.prototype.log=function(){t.log(this)},t.prototype.setLearningRate=function(t){this.learningRate=t},t.prototype.getLearningRate=function(){return this.learningRate},t}();e.NeuralNetwork=s}]);
